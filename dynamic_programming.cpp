/*다이나믹 프로그래밍 기초이다.
하나의 문제는 단 한번만 풀도록 하는 알고리즘으로 효율성 개선하는 알고리즘
분할정복기법은 동일한문제를 다시 푼다는 단점이있다. 그러나 피보나치수열 등에서
분할정복은 매우 비효율적이다. 동적프로그래밍에서는 단 한번만 계산한다.
가정 1. 큰 문제를 작은 문제로 나눌 수 있다.
가정 2. 작은 문제에서 구한 정답은 그것을 포함하는 큰 문제에서도 작동한다.
이미 계산한 결과는 배열에 저장함으로써 나중에 꺼내서 쓰기만하면 되게끔한다.*/

//메모지에이션기법
//간단한 예시

#include <stdio.h>

int d[100] = { 0, }; //배열 선언 및 전체 0으로초기화
int fibonacci(int x) {
	if (x == 1) return 1; //1과 2는 피보나치에서 뭘 더해서 나오는 수가 아니기때문에 거른다
	if (x == 2) return 1;
	if (d[x] != 0) return d[x]; //목표치 배열이 생성됐으면 값반환
	return d[x] = fibonacci(x - 1) + fibonacci(x - 2); //구한 값을 배열 d에 저장
}
int main() {
	printf("%d", fibonacci(50));
}


//피보나치수열 : 1 1 2 3 5 8 13 21 34 55 ....